load("Model-based analysis/DSM_data_1719.RData")
# 2021 sights and effort, boundaries, prediction grid
load("Model-based analysis/DSM_data_2021.RData")
# SST downloaded from OISST
load("Model-based analysis/OISST_data.RData")
load("Model-based analysis/SST_prediction grids.RData")
load("Model-based analysis/sgt.dsm.RData")
load("Model-based analysis/seg.dsm.RData")
load("Model-based analysis/ModelBasedResults.RData")
load("Model-based analysis/predgrid_all-cache.RData")
load("Model-based analysis/pr_er-cache.RData")
load("Model-based analysis/pr_gs-cache.RData")
# dividing data into core and outside core
sightCore <- sightFull[sightFull$Block_final == "A",]
sightOutCore <- sightFull[sightFull$Block_final == "A-out",]
# plotting areas, transects and sightings
par(mfrow=c(1,2))
plot(clc, col="gray93", xlab="Longitude", ylab="Latitude")
# plot(aA19,add=T)
# plot(aA21ext,add=T)
lines(bnd.coreA$Lon, bnd.coreA$Lat, lwd=2)
lines(bnd.outsideA$Lon, bnd.outsideA$Lat, lwd=2, lty=2)
segments(effort21$StartLon[effort21$block_final=="A-core"], effort21$StartLat[effort21$block_final=="A-core"], effort21$EndLon[effort21$block_final=="A-core"], effort21$EndLat[effort21$block_final=="A-core"], col="grey")
segments(effort21$StartLon[effort21$block_final=="A-NotCore"], effort21$StartLat[effort21$block_final=="A-NotCore"], effort21$EndLon[effort21$block_final=="A-NotCore"], effort21$EndLat[effort21$block_final=="A-NotCore"], col="aquamarine3")
points(sightCore$Lon, sightCore$Lat, col="orange", pch=16)#, cex=sight2021$Cluster.size.total/1000)
points(sightOutCore$Lon, sightOutCore$Lat, col="red", pch=16)#, cex=sight2021$Cluster.size.total/1000)
# Plot survey region
blue.col <- colorRampPalette(c("darkblue", "lightblue"))
#quilt.plot(predgrid$Lon, predgrid$Lat, predgrid$depth, xlab="Longitude",
#           ylab="Latitude", col=blue.col(70))
temp <- bathy[bathy$depth < 0, ]
quilt.plot(temp$Lon, temp$Lat, temp$depth, xlab="Longitude",
ylab="Latitude", col=blue.col(70))
lines(bnd.coreA$Lon, bnd.coreA$Lat, lwd=2)
lines(bnd.outsideA$Lon, bnd.outsideA$Lat, lwd=2, lty=2)
### data preparation seg.dsm and sgt is now loaded as it takes time
# #Combine data together
# seg.dsm <- rbind(seg1719[ , 1:15], seg21)
# # Do a bit of renaming
# seg.dsm$Effort <- seg.dsm$len.km
#
# # Change date format
# sgt1719$Date <- change.date.format.f(sgt1719$Date)
# sgt.dsm <- rbind(sgt1719, sgt21[, 1:11])
# # Get rid of sights with missing distance
# #sgt.dsm <- sgt.dsm[!is.na(sgt.dsm$distance), ]
#
# # Add necessary columns
# seg.dsm$Region.Label <- seg.dsm$Year
# sgt.dsm$Region.Label <- sgt.dsm$Year
#
# # Add SST
# #   to segments
# seg.dsm <- add.sst.f(seg.dsm, datecol=1, latcol=13, loncol=14, sst.data=OISST_data,
#                      reduce.grid=2)
# #   to sights
# sgt.dsm <- add.sst.f(sgt.dsm, datecol=2, latcol=9, loncol=10, sst.data=OISST_data,
#                      reduce.grid=2)
#
# # Add SST for 10 days prior to survey date (SST10)
# #   to segments
# seg.dsm$SST10 <- add.sst10.f(seg.dsm, datecol=1, latcol=13, loncol=14, sst.data=OISST_data,
#                      reduce.grid=2)
# #   to sights
# sgt.dsm$SST10 <- add.sst10.f(sgt.dsm, datecol=2, latcol=9, loncol=10, sst.data=OISST_data,
#                      reduce.grid=2)
#
# # Calculate difference between SST and SST10
# seg.dsm$SSTd10 <- seg.dsm$SST - seg.dsm$SST10
# sgt.dsm$SSTd10 <- sgt.dsm$SST - sgt.dsm$SST10
#
# set.seed(123)
#
# # Convert all locations to distance from reference point (so units are same in x and y direction)
# ref.loc <- data.frame(Lat=36, Lon=(-1.5))
#
# # Segment midpoints
# temp <- latlong2km(lon=seg.dsm$MidLon, lat=seg.dsm$MidLat, lon0=ref.loc$Lon[1],
#                    lat0=ref.loc$Lat[1])
# seg.dsm$x <- temp$km.e
# seg.dsm$y <- temp$km.n
#
#
# # changing Year into factor
# seg.dsm$YearF <- as.factor(seg.dsm$Year)
#
# # Sights locations
# temp <- latlong2km(lon=sgt.dsm$Lon, lat=sgt.dsm$Lat, lon0=ref.loc$Lon[1],
#                    lat0=ref.loc$Lat[1])
# sgt.dsm$x <- temp$km.e
# sgt.dsm$y <- temp$km.n
#
# save(sgt.dsm, predgrid.SST10, file="sgt.dsm.RData")
# save(seg.dsm, predgrid.SST10, file="seg.dsm.RData")
# Convert all locations to distance from reference point (so units are same in x and y direction)
ref.loc <- data.frame(Lat=36, Lon=(-1.5))
# Prediction grid
temp <- latlong2km(lon=predgrid$Lon, lat=predgrid$Lat, lon0=ref.loc$Lon[1],
lat0=ref.loc$Lat[1])
predgrid$x <- temp$km.e
predgrid$y <- temp$km.n
predgrid.areaA <- sum(predgrid$area[predgrid$block=="coreA"])
predgrid.areaAout <- sum(predgrid$area[predgrid$block=="outsideA"])
## data ready for modelling
# Select sightings and save in observation table
# Specify truncation distance
maxw <- 1500
# Get rid of sights outside truncation distance (avoids warning message)
obs.tabMB <- sgt.dsm[sgt.dsm$distance<=maxw, ]
nsgt <- dim(obs.tabMB)[1]
obs.tabMB$Company <- droplevels(obs.tabMB$Company)
# Add useful columns for Distance
obs.tabMB$object <- 1:nrow(obs.tabMB)
obs.tabMB$detected <- 1
# Convert perp distances to km (so everything is in the same units)
obs.tabMB$distance <- obs.tabMB$distance/1000
# Keep backup
obs.tab.bck <- obs.tabMB
#Sea surface temperatures ($^o$C) on 15 June in 2017, 2018 and 2019, representing the approximate mid point of the surveys.
#```{r plotsst, echo=F, eval=T, out.width="50%", fig.show="hold", fig.cap=""}
# Plot SST
par(mfrow=c(2,2), mar=c(2,2,2,2))
minz <- min(c(predgrid.SST10$t2017, predgrid.SST10$t2018, predgrid.SST10$t2019,
predgrid.SST10$t2021), na.rm=T)
maxz <- max(c(predgrid.SST$t2017, predgrid.SST$t2018, predgrid.SST$t2019,
predgrid.SST$t2021), na.rm=T)
# 2017
quilt.plot(predgrid$Lon, predgrid$Lat, predgrid.SST$t2017, xlab="Longitude",
ylab="Latitude", main="2017", zlim=c(minz, maxz), col=viridis::viridis(100))
lines(bnd.coreA$Lon, bnd.coreA$Lat, lwd=2)
lines(bnd.outsideA$Lon, bnd.outsideA$Lat, lwd=2, lty=2)
# 2018
quilt.plot(predgrid$Lon, predgrid$Lat, predgrid.SST$t2018, xlab="Longitude",
ylab="Latitude", main="2018", zlim=c(minz, maxz),col=viridis::viridis(100))
lines(bnd.coreA$Lon, bnd.coreA$Lat, lwd=2)
lines(bnd.outsideA$Lon, bnd.outsideA$Lat, lwd=2, lty=2)
# 2019
quilt.plot(predgrid$Lon, predgrid$Lat, predgrid.SST$t2019, xlab="Longitude",
ylab="Latitude", main="2019", zlim=c(minz, maxz),col=viridis::viridis(100))
lines(bnd.coreA$Lon, bnd.coreA$Lat, lwd=2)
lines(bnd.outsideA$Lon, bnd.outsideA$Lat, lwd=2, lty=2)
# 2021
quilt.plot(predgrid$Lon, predgrid$Lat, predgrid.SST$t2021, xlab="Longitude",
ylab="Latitude", main="2021", zlim=c(minz, maxz),col=viridis::viridis(100))
lines(bnd.coreA$Lon, bnd.coreA$Lat, lwd=2)
lines(bnd.outsideA$Lon, bnd.outsideA$Lat, lwd=2, lty=2)
# adding dates
effort21$Date <- NA
effort21$Date[effort21$Survey==1] <- "2021-06-04"
effort21$Date[effort21$Survey==2] <- "2021-06-06"
effort21$Date[effort21$Survey==3] <- "2021-06-07"
effort21$Date[effort21$Survey==4] <- "2021-06-08"
effort21$Date[effort21$Survey==5] <- "2021-06-09"
effort21$Date[effort21$Survey==6] <- "2021-06-11"
effort21$Date[effort21$Survey==7] <- "2021-06-12"
effort21$Date[effort21$Survey==8] <- "2021-06-13"
effort21$Date[effort21$Survey==9] <- "2021-06-16"
effort21$Date[effort21$Survey==10] <- "2021-06-18"
effort21$Date[effort21$Survey==11] <- "2021-06-18"
effort21$Date[effort21$Survey==12] <- "2021-06-22"
effort21$Date[effort21$Survey==13] <- "2021-06-23"
effort21$Date[effort21$Survey==14] <- "2021-06-25"
effort21$Date[effort21$Survey==15] <- "2021-06-26"
effort21$Date[effort21$Survey==16] <- "2021-06-27"
effort21$Date[effort21$Survey==17] <- "2021-06-28"
effort21$Date[effort21$Survey==18] <- "2021-06-30"
effort21$Date[effort21$Survey==19] <- "2021-07-01"
effort21$Date[effort21$Survey==20] <- "2021-07-02"
effort21$Date[effort21$Survey==21] <- "2021-07-03"
effort21$Date[effort21$Survey==22] <- "2021-07-05"
effort21$Date <- as.Date(effort21$Date, format="%Y-%m-%d")
effort21$Region.Label <- effort21$BlockYear
effort21$Airplane <- "Cessna337"
effort21$Week <- format(effort21$Date, "%W")
effsum <- tapply(effort21$Length, effort21$block_final, sum, na.rm=T)
Region <- c("A-core","A-extended")
sight <- c(8,12)
temp <- cbind.data.frame(Region,effsum,sight)
colnames(temp) <- c("Region","Effort [km]", "Sightings")
rownames(temp) <- NULL
pander::pander(temp)
# data preparation for modelling
##### period 2017-2021 - core area only #####
#### sightings - data preparation, including merging 2021 with previous years
obs.table<- ICCAT.detections[, c("object","distance","Region.Label","Sample.Label","size","Biomass","Species",
"Bubble","SeaState","Haze","Glare","Turbidity","Year","Airplane","obstype","Period","Company","Block_final")]
obs.table1719 <- obs.table[obs.table$Period=="2017-2019",]
obs.table1719$distance <- as.numeric(obs.table1719$distance)
str(obs.table1719)
obs.table1719$distance <- round(obs.table1719$distance, digits=3)
# adding 2021 to sightings
sightCore$Airplane <- "Cessna337"
sightCore$Period <- "2021"
sightCore$Perpdist_final # should be in meters and it is
obs.table21 <- sightCore[,c("X","Perpdist_final","BlockYear","Sample.Label","Cluster.size.total",
"Weight.total","Species","Bubble_cor","SeaState","Haze","Glare",
"Turbidity","Year","Airplane","Observer.type","Period","Company",
"Block_final")]
colnames(obs.table21) <- colnames(obs.table1719)
obs.table1721 <- rbind.data.frame(obs.table1719,obs.table21)
#### area
ICCAT.area1719 <- ICCAT.area[ICCAT.area$Region.Label %in% unique(obs.table1719$Region.Label),]
# adding 2021 to area
a2021 <- c("A-2021",ICCAT.area1719$Area[ICCAT.area1719$Region.Label=="A-2019"])
ICCAT.area1721 <- rbind.data.frame(ICCAT.area1719,a2021)
ICCAT.area1721$Area <- as.numeric(ICCAT.area1721$Area)
str(ICCAT.area1721)
#### effort
ICCAT.effort1719 <- ICCAT.effort[ICCAT.effort$Region.Label %in% unique(obs.table1719$Region.Label),]
# adding 2021 to effort
effort21core <- effort21[effort21$block_final=="A-core",]
ICCAT.effort21 <- effort21core[,c("Sample.Label","Date","Region.Label",
"BlockFinal","Length","Year","Airplane","Week")]
ICCAT.effort21 <- ICCAT.effort21[!is.na(effort21core$Length),]
colnames(ICCAT.effort21) <- colnames(ICCAT.effort1719)
ICCAT.effort1721 <- rbind.data.frame(ICCAT.effort1719,ICCAT.effort21)
sumCore <- summarize_ds_models(mod1721_hn,
mod1721_hr,
mod1721_SS_hn,
mod1721_SS_hr,
mod1721_Companyhn,
mod1721_Companyhr,
mod1721_Planehn,
# mod1721_Planehr, # I dont know what is wrong with this model but something is
mod1721_Yearhn,
mod1721_Yearhr,
mod1721_Sea_hn,
mod1721_Sea_hr,
mod1721_Reg_hn,
mod1721_Reg_hr,
output = "plain")
# harvesiting cv for p
p.CV2=c(summary(mod1721_hn)$ds$average.p.se/summary(mod1721_hn)$ds$average.p,
summary(mod1721_hr)$ds$average.p.se/summary(mod1721_hr)$ds$average.p,
summary(mod1721_SS_hn)$ds$average.p.se/summary(mod1721_SS_hn)$ds$average.p,
summary(mod1721_SS_hr)$ds$average.p.se/summary(mod1721_SS_hr)$ds$average.p,
summary(mod1721_Companyhn)$ds$average.p.se/summary(mod1721_Companyhn)$ds$average.p,
summary(mod1721_Companyhr)$ds$average.p.se/summary(mod1721_Companyhr)$ds$average.p,
summary(mod1721_Planehn)$ds$average.p.se/summary(mod1721_Planehn)$ds$average.p,
#summary(mod1721_Planehr)$ds$average.p.se/summary(mod1721_Planehr)$ds$average.p,
summary(mod1721_Yearhn)$ds$average.p.se/summary(mod1721_Yearhn)$ds$average.p,
summary(mod1721_Yearhr)$ds$average.p.se/summary(mod1721_Yearhr)$ds$average.p,
summary(mod1721_Sea_hn)$ds$average.p.se/summary(mod1721_Sea_hn)$ds$average.p,
summary(mod1721_Sea_hr)$ds$average.p.se/summary(mod1721_Sea_hr)$ds$average.p,
summary(mod1721_Reg_hn)$ds$average.p.se/summary(mod1721_Reg_hn)$ds$average.p,
summary(mod1721_Reg_hr)$ds$average.p.se/summary(mod1721_Reg_hr)$ds$average.p
)
temp2 <- cbind.data.frame(sumCore$Model, sumCore$`Key function`, sumCore$`C-vM $p$-value`,sumCore$`Average detectability`,p.CV2,sumCore$`Delta AIC`)
rownames(temp2) <- NULL
colnames(temp2) <- c("Model", "Key function", "p value of C-vM", "p.CV","p","Delta AIC")
mods2 <- c("School size + Airplane", "School size + Company", "School size + Company", "School size + Region" ,"School size + Sea state", "School size + Region","School size","School size + Year", "School size + Sea state", "School size", "School size + Year", "No covariates", "No covariates" )
temp2$Model <- mods2
temp2$`Key function`[13] <- "Half-normal"
# pander::panderOptions('table.continues')
# pander::panderOptions('formula.caption.prefix',"")
# pander::pander(temp2,caption = 'Table 3')
kab <- knitr::kable(temp2, caption=NULL,
booktabs=T, label="kabletable")
kable_classic_2(kab, full_width=F, latex_options="hold_position")
temp2 <- cbind.data.frame(est1721[ ,c(1)],Pacorr1721,est1721[ ,c(2:5,7,8)],est1721[,c(9)]/1000,est1721[,c(10)],est1721[,c(11,12)]/1000,est1721[c(13,14)],est1721Bio[,c(9)]/1000,est1721Bio[,c(10)],est1721Bio[,c(11,12)]/1000, est1721Bio[,c(7,8)],est1721Bio[,c(13)]/1000,est1721Bio[,c(14)])
names(temp2) <- c("Survey","p","Effort","n","ER","ER.CV","N-D","N-D.CV","N","N.CV", "N-LCL","N-UCL","N-ES","N_ES.CV","B","B.CV","B-LCL","B-UCL","B-D","B-D.CV","B-ES","B-ES.CV")
# reducing number of digits to display
temp2$p <- round(temp2$p,2)
temp2$ER <- round(temp2$ER,4)
temp2$ER.CV <- round(temp2$ER.CV,2)
temp2$`N-D` <- round(temp2$`N-D`,2)
temp2$`N-D.CV` <- round(temp2$`N-D.CV`,2)
temp2$N <- round(temp2$N,2)
temp2$N.CV <- round(temp2$N.CV,2)
temp2$`N-LCL` <- round(temp2$`N-LCL`,2)
temp2$`N-UCL` <- round(temp2$`N-UCL`,2)
temp2$`N-ES` <- round(temp2$`N-ES`,2)
temp2$N_ES.CV <- round(temp2$N_ES.CV,2)
temp2$`B` <- round(temp2$`B`,2)
temp2$`B.CV` <- round(temp2$`B.CV`,2)
temp2$`B-LCL` <- round(temp2$`B-LCL`,2)
temp2$`B-UCL` <- round(temp2$`B-UCL`,2)
temp2$`B-D`<- round(temp2$`B-D`,2)
temp2$`B-D.CV`<- round(temp2$`B-D.CV`,2)
temp2$`B-ES` <- round(temp2$`B-ES`,2)
temp2$`B-ES.CV` <- round(temp2$`B-ES.CV`,2)
# pander::panderOptions('table.continues')
# pander::panderOptions('formula.caption.prefix',"")
# pander::pander(temp2[1:4,],caption = 'Table 4')
# kab <- knitr::kable(temp2[1:4,], caption=NULL,
#                          booktabs=T, label="kabletable")
# kab <- kab %>%
#   kable_styling(latex_options = "scale_down")
# kable_classic_2(kab, full_width=F) #, latex_options="hold_position"
knitr::kable(temp2[1:4,1:11], caption=NULL,) %>%
kable_styling(latex_options = "scale_down") %>%
kableExtra::kable_styling(latex_options = "hold_position")
knitr::kable(temp2[1:4,c(1,12:22)], caption=NULL,) %>%
kable_styling(latex_options = "scale_down") %>%
kableExtra::kable_styling(latex_options = "hold_position")
temp2 <- cbind.data.frame(est1721[ ,c(1)],Pacorr1721,est1721[ ,c(2:5,7,8)],est1721[,c(9)]/1000,est1721[,c(10)],est1721[,c(11,12)]/1000,est1721[c(13,14)],est1721Bio[,c(9)]/1000,est1721Bio[,c(10)],est1721Bio[,c(11,12)]/1000, est1721Bio[,c(7,8)],est1721Bio[,c(13)]/1000,est1721Bio[,c(14)])
names(temp2) <- c("Survey","p","Effort","n","ER","ER.CV","N-D","N-D.CV","N","N.CV", "N-LCL","N-UCL","N-ES","N_ES.CV","B","B.CV","B-LCL","B-UCL","B-D","B-D.CV","B-ES","B-ES.CV")
# reducing number of digits to display
temp2$p <- round(temp2$p,2)
temp2$ER <- round(temp2$ER,4)
temp2$ER.CV <- round(temp2$ER.CV,2)
temp2$`N-D` <- round(temp2$`N-D`,2)
temp2$`N-D.CV` <- round(temp2$`N-D.CV`,2)
temp2$N <- round(temp2$N,2)
temp2$N.CV <- round(temp2$N.CV,2)
temp2$`N-LCL` <- round(temp2$`N-LCL`,2)
temp2$`N-UCL` <- round(temp2$`N-UCL`,2)
temp2$`N-ES` <- round(temp2$`N-ES`,2)
temp2$N_ES.CV <- round(temp2$N_ES.CV,2)
temp2$`B` <- round(temp2$`B`,2)
temp2$`B.CV` <- round(temp2$`B.CV`,2)
temp2$`B-LCL` <- round(temp2$`B-LCL`,2)
temp2$`B-UCL` <- round(temp2$`B-UCL`,2)
temp2$`B-D`<- round(temp2$`B-D`,2)
temp2$`B-D.CV`<- round(temp2$`B-D.CV`,2)
temp2$`B-ES` <- round(temp2$`B-ES`,2)
temp2$`B-ES.CV` <- round(temp2$`B-ES.CV`,2)
# pander::panderOptions('table.continues')
# pander::panderOptions('formula.caption.prefix',"")
# pander::pander(temp2[1:4,],caption = 'Table 4')
# kab <- knitr::kable(temp2[1:4,], caption=NULL,
#                          booktabs=T, label="kabletable")
# kab <- kab %>%
#   kable_styling(latex_options = "scale_down")
# kable_classic_2(kab, full_width=F) #, latex_options="hold_position"
knitr::kable(temp2[1:4,1:11], caption=NULL,) %>%
kable_styling(latex_options = "scale_down") %>%
kableExtra::kable_styling(latex_options = "hold_position")
knitr::kable(temp2[1:4,c(1,12:22)], caption=NULL,) %>%
kable_styling(latex_options = "scale_down") %>%
kableExtra::kable_styling(latex_options = "hold_position")
# data preparation for modelling
##### period 2017-2021 - core and extended areas combined #####
sight2021All <- sightFull
sight2021All$Airplane <- "Cessna337"
sight2021All$Period <- "2021"
sight2021All$Perpdist_final # should be in meters and it is
obs.table21All <- sight2021All[ ,c("X","Perpdist_final","BlockYear","Sample.Label",
"Cluster.size.total",
"Weight.total","Species","Bubble_cor","SeaState","Haze","Glare",
"Turbidity","Year","Airplane","Observer.type","Period",
"Company", "Block_final")]
colnames(obs.table21All) <- colnames(obs.table1719)
obs.table1721all <- rbind.data.frame(obs.table1719, obs.table21All)
# ensure object column is unique
obs.table1721all$object <- 1:dim(obs.table1721all)[1]
# effort
ICCAT.effort21all <- effort21[ ,c("Sample.Label","Date","Region.Label",
"BlockFinal","Length","Year","Airplane","Week")]
ICCAT.effort21all <- ICCAT.effort21all[!is.na(effort21$Length), ]
colnames(ICCAT.effort21all) <- colnames(ICCAT.effort1719)
# checking if track labels are unique
# table(ICCAT.effort21all$Sample.Label)
# table(obs.table21All$Sample.Label)
# Combine together
ICCAT.effort1721all <- rbind.data.frame(ICCAT.effort1719, ICCAT.effort21all)
# Add areas for 2021
# Add outside core
a2021 <- data.frame(Region.Label=c("A-out-2021"),
Area=c(123743.0))
ICCAT.area1721all <- rbind(ICCAT.area1721, a2021)
sumAll <- summarize_ds_models(mod1721All_hn,mod1721All_hr,mod1721All_hn.size,mod1721All_hr.size,mod1721All_hn.company,mod1721All_hr.company,mod1721All_hn.plane,mod1721All_hr.plane,mod1721All_hn.year,mod1721All_hr.year,mod1721All_hn.seas,mod1721All_hr.seas,mod1721All_hn.reg,mod1721All_hr.reg,output = "plain")
sumAll
sumAll <- summarize_ds_models(mod1721All_hn,mod1721All_hr,mod1721All_hn.size,mod1721All_hr.size,mod1721All_hn.company,mod1721All_hr.company,mod1721All_hn.plane,mod1721All_hr.plane,mod1721All_hn.year,mod1721All_hr.year,mod1721All_hn.seas,mod1721All_hr.seas,mod1721All_hn.reg,mod1721All_hr.reg,output = "plain")
# harvesiting cv for p
p.CV2=c(summary(mod1721All_hn)$ds$average.p.se/summary(mod1721All_hn)$ds$average.p,
summary(mod1721All_hr)$ds$average.p.se/summary(mod1721All_hr)$ds$average.p,
summary(mod1721All_hn.size)$ds$average.p.se/summary(mod1721All_hn.size)$ds$average.p,
summary(mod1721All_hr.size)$ds$average.p.se/summary(mod1721All_hr.size)$ds$average.p,
summary(mod1721All_hn.company)$ds$average.p.se/summary(mod1721All_hn.company)$ds$average.p,
summary(mod1721All_hr.company)$ds$average.p.se/summary(mod1721All_hr.company)$ds$average.p,
summary(mod1721All_hn.plane)$ds$average.p.se/summary(mod1721All_hn.plane)$ds$average.p,
summary(mod1721All_hr.plane)$ds$average.p.se/summary(mod1721All_hr.plane)$ds$average.p,
summary(mod1721All_hn.year)$ds$average.p.se/summary(mod1721All_hn.year)$ds$average.p,
summary(mod1721All_hr.year)$ds$average.p.se/summary(mod1721All_hr.year)$ds$average.p,
summary(mod1721All_hn.seas)$ds$average.p.se/summary(mod1721All_hn.seas)$ds$average.p,
summary(mod1721All_hr.seas)$ds$average.p.se/summary(mod1721All_hr.seas)$ds$average.p,
summary(mod1721All_hn.reg)$ds$average.p.se/summary(mod1721All_hn.reg)$ds$average.p,
summary(mod1721All_hr.reg)$ds$average.p.se/summary(mod1721All_hr.reg)$ds$average.p
)
temp2 <- cbind.data.frame(sumAll$Model, sumAll$`Key function`, sumAll$`C-vM $p$-value`,sumAll$`Average detectability`,p.CV2,sumAll$`Delta AIC`)
rownames(temp2) <- NULL
colnames(temp2) <- c("Model", "Key function", "p value of C-vM", "p.CV","p","Delta AIC")
mods2 <- c("School size + Airplane",
"School size + Company",
"School size + Airplane",
"School size + Company",
"School size + Region",
"School size + Sea state",
"School size",
"School size + Region",
"School size + Sea state",
"School size + Year",
"School size ",
"School size + Year",
"No covariates",
"No covariates" )
temp2$Model <- mods2
temp2$`Key function`[14] <- "Half-normal"
# pander::panderOptions('table.continues')
# pander::panderOptions('formula.caption.prefix',"")
# pander::pander(temp2,caption = 'Table 5')
kab <- knitr::kable(temp2, caption=NULL,
booktabs=T, label="kabletable", caption=NULL)
temp2
sumAll <- summarize_ds_models(mod1721All_hn,mod1721All_hr,mod1721All_hn.size,mod1721All_hr.size,mod1721All_hn.company,mod1721All_hr.company,mod1721All_hn.plane,mod1721All_hr.plane,mod1721All_hn.year,mod1721All_hr.year,mod1721All_hn.seas,mod1721All_hr.seas,mod1721All_hn.reg,mod1721All_hr.reg,output = "plain")
# harvesiting cv for p
p.CV2=c(summary(mod1721All_hn)$ds$average.p.se/summary(mod1721All_hn)$ds$average.p,
summary(mod1721All_hr)$ds$average.p.se/summary(mod1721All_hr)$ds$average.p,
summary(mod1721All_hn.size)$ds$average.p.se/summary(mod1721All_hn.size)$ds$average.p,
summary(mod1721All_hr.size)$ds$average.p.se/summary(mod1721All_hr.size)$ds$average.p,
summary(mod1721All_hn.company)$ds$average.p.se/summary(mod1721All_hn.company)$ds$average.p,
summary(mod1721All_hr.company)$ds$average.p.se/summary(mod1721All_hr.company)$ds$average.p,
summary(mod1721All_hn.plane)$ds$average.p.se/summary(mod1721All_hn.plane)$ds$average.p,
summary(mod1721All_hr.plane)$ds$average.p.se/summary(mod1721All_hr.plane)$ds$average.p,
summary(mod1721All_hn.year)$ds$average.p.se/summary(mod1721All_hn.year)$ds$average.p,
summary(mod1721All_hr.year)$ds$average.p.se/summary(mod1721All_hr.year)$ds$average.p,
summary(mod1721All_hn.seas)$ds$average.p.se/summary(mod1721All_hn.seas)$ds$average.p,
summary(mod1721All_hr.seas)$ds$average.p.se/summary(mod1721All_hr.seas)$ds$average.p,
summary(mod1721All_hn.reg)$ds$average.p.se/summary(mod1721All_hn.reg)$ds$average.p,
summary(mod1721All_hr.reg)$ds$average.p.se/summary(mod1721All_hr.reg)$ds$average.p
)
temp2 <- cbind.data.frame(sumAll$Model, sumAll$`Key function`, sumAll$`C-vM $p$-value`,sumAll$`Average detectability`,p.CV2,sumAll$`Delta AIC`)
rownames(temp2) <- NULL
colnames(temp2) <- c("Model", "Key function", "p value of C-vM", "p.CV","p","Delta AIC")
mods2 <- c("School size + Airplane",
"School size + Company",
"School size + Airplane",
"School size + Company",
"School size + Region",
"School size + Sea state",
"School size",
"School size + Region",
"School size + Sea state",
"School size + Year",
"School size ",
"School size + Year",
"No covariates",
"No covariates" )
temp2$Model <- mods2
temp2$`Key function`[14] <- "Half-normal"
# pander::panderOptions('table.continues')
# pander::panderOptions('formula.caption.prefix',"")
# pander::pander(temp2,caption = 'Table 5')
kab <- knitr::kable(temp2, caption=NULL,
booktabs=T, label="kabletable")
kable_classic_2(kab, full_width=F, latex_options="hold_position")
setwd("C:/Users/mec21/OneDrive - University of St Andrews/SMRU/DEB_SMRUC/DEB paper code/Final code for the paper/Porpoises/")
numCores <- 22#detectCores()-1
disturbance.effect.h <- c(0,1,2,4,6,8,12) # disturbance effect in hours
p_dist1 <- c(0.05,0.1,0.2,0.4,0.6,0.8,1)
comb <- expand.grid(disturbance.effect.h = disturbance.effect.h ,p_dist1 = p_dist1)
trr <- comb[comb$disturbance.effect.h==0,]
comb <- comb[c(-8,-15,-22,-29,-36,-43),]
#load("Porpoise_ParamsFromABC.RData")
load("Porpoise_ParamsFromABC_superNonstrict.RData")
### this piece of code (to line 28) is just to get first.day, the piling is also loaded later in the code
piling.file <- "DEB_PS1"
#load("Porpoise_ParamsFromABC.RData")
load("Porpoise_ParamsFromABC_superNonstrict.RData")
### this piece of code (to line 28) is just to get first.day, the piling is also loaded later in the code
piling.file <- "DEB_PS1"
pile <- read.csv(file = piling.file, header = TRUE)
All_Dates <- strptime(pile[,3],format="%d-%b-%y")
All_Durations <- pile[,2]
Dates <- unique(All_Dates)
range(Dates)
# determine Julian date for first day in piling file
# determine Julian date for first day in piling file
first.day <- Dates$yday[1] + 1
age.affected <- c(17)
source('PorpoiseDEB_Params.R')
pile <- read.csv(file = piling.file, header = TRUE)
All_Dates <- strptime(pile[,3],format="%d-%b-%y")
### this piece of code (to line 28) is just to get first.day, the piling is also loaded later in the code
piling.file <- "DEB_PS1.csv"
pile <- read.csv(file = piling.file, header = TRUE)
All_Dates <- strptime(pile[,3],format="%d-%b-%y")
All_Durations <- pile[,2]
Dates <- unique(All_Dates)
range(Dates)
head(pile)
All_Dates <- strptime(pile[,3],format="%d/%b/%y")
All_Durations <- pile[,2]
Dates <- unique(All_Dates)
range(Dates)
piling.file <- "DEB_PS1.csv"
pile <- read.csv(file = piling.file, header = TRUE)
All_Dates <- strptime(pile[,3],format="%d/%b/%Y")
All_Durations <- pile[,2]
Dates <- unique(All_Dates)
range(Dates)
All_Dates <- strptime(pile[,3],format="%d/%m/%Y")
All_Durations <- pile[,2]
Dates <- unique(All_Dates)
range(Dates)
source('PorpoiseDEB_Params.R')
first.julian_days <- which(julian_days==first.day)
start_adcalf_birthdeath_new4s
# determine Julian date for first day in piling file
# determine Julian date for first day in piling file
first.day <- Dates$yday[1] + 1
age.affected <- c(17)
source('PorpoiseDEB_Params.R')
first.julian_days <- which(julian_days==first.day)
start_pile <- first.julian_days[age.affected] # first day of piling at the age when porpoise is affected
difStartP2B <- first.day + ((365-birthday) + 10)
start_adcalf_birthdeath_new4s <- start_pile - difStartP2B
start_adcalf_birthdeath_new4s
load("C:/Users/mec21/OneDrive - University of St Andrews/SMRU/DEB_SMRUC/ABC/Porpoise/Porpoise_ParamsFromABC_superNonstrict.RData")
load("C:/Users/mec21/OneDrive - University of St Andrews/SMRU/DEB_SMRUC/ABC/Porpoise/Porpoise_ParamsFromABC_strict.RData")
load("C:/Users/mec21/OneDrive - University of St Andrews/SMRU/DEB_SMRUC/ABC/Porpoise/Porpoise_ParamsFromABC_strict.RData")
